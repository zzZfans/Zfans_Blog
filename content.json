{"meta":{"title":"Zfans. - 浮生若梦，冷暖自知。","subtitle":null,"description":"Zfans的个人博客。","author":"Zfans.","url":""},"pages":[{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-02-13T17:11:22.000Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-02-25T14:31:45.838Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[Zfans.] 与&nbsp; Zfans.&nbsp; （ 真（ま）白（しろ） ） 对话中... //bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-02-13T17:11:22.000Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-02-13T17:11:22.000Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-02-13T17:11:22.000Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-02-13T17:11:22.000Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-02-26T05:01:05.309Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-02-13T17:11:22.000Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-02-13T17:11:22.000Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-02-13T17:11:22.000Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-02-13T17:11:22.000Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-02-13T17:11:22.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"}],"posts":[{"title":"解决pip更新问题","slug":"解决pip更新问题","date":"2020-02-23T12:13:00.000Z","updated":"2020-02-26T04:40:49.481Z","comments":true,"path":"2020/02/23/解决pip更新问题/","link":"","permalink":"/2020/02/23/解决pip更新问题/","excerpt":"","text":"当直接输入python -m pip install --upgrade pip 更新还报错的时候，输入命令：python -m pip install -U pip 问题解决。","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"python","slug":"python","permalink":"/tags/python/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"error No rule to make target '...'. Stop. 解决方案","slug":"error No rule to make target '...'. Stop. 解决方案","date":"2020-02-15T06:25:11.000Z","updated":"2020-02-26T04:38:18.792Z","comments":true,"path":"2020/02/15/error No rule to make target '...'. Stop. 解决方案/","link":"","permalink":"/2020/02/15/error No rule to make target '...'. Stop. 解决方案/","excerpt":"","text":"一、error： 二、解决方案：第一步：删除 xxx.pro 文件中的RESOURCES += \\ xxx.qrc 12 然后 CTRL+S 保存文件。第二步：重新添加资源文件（注：文件名不要使用中文，以避免未知的错误）。三、编译环境：","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"/tags/Qt/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"xrdp 方式 windows 10 连接 ubuntu 18.04","slug":"xrdp方式windows-10连接ubuntu-18-04","date":"2019-08-31T04:25:11.000Z","updated":"2020-02-26T04:39:39.077Z","comments":true,"path":"2019/08/31/xrdp方式windows-10连接ubuntu-18-04/","link":"","permalink":"/2019/08/31/xrdp方式windows-10连接ubuntu-18-04/","excerpt":"","text":"你一定已经查看了很多远程桌面的复制粘贴文章，稀里糊涂的配置了一大堆，可能连得上也可能连不上，这里记录了确定可以工作的一个解决方案，希望能帮到你。 我这边因为需要vmplayer这个软件，此软件一定需要一个gui界面才能启动，所以安装了桌面版的ubuntu，但是远程维护的话，就需要用到远程桌面了。 xrdp vs vnc vs …xrdp是原生方案，兼容性是最好的，也不需要太多额外的软件支持。其他的请自行google。 软件安装仅需要 sudo apt install xrdp 编辑配置sudo vim /etc/xrdp/startwm.sh 把最下面的test和exec两行注释掉，添加一行 gnome-session 重新启动ubuntu，不要登录！windows远程桌面连接 windows打开远程桌面输入ubuntu主机ip或者主机名 选择xorg，输入用户名密码 会提示几次授权修改主机的颜色设置什么的，都可以cancel掉，然后即可登陆成功 原文链接","categories":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"/tags/Linux/"}],"keywords":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}]},{"title":"Qt 实现多级菜单","slug":"Qt实现多级菜单","date":"2019-08-31T03:44:34.000Z","updated":"2020-02-26T04:39:26.641Z","comments":true,"path":"2019/08/31/Qt实现多级菜单/","link":"","permalink":"/2019/08/31/Qt实现多级菜单/","excerpt":"","text":"前言在众多知名的软件UI中下拉菜单、按钮菜单、右键菜单、托盘菜单、多级菜单等等是很常见的，就连Windows和linux等系统级的软件也用到这些UI元素。 下图就是我们最常见的Windows系统多级菜单： Qt实现（多级）菜单在Qt中通过QMenu和QAction就可以实现这些菜单，QMenu就是上图中我们看到的三个级联菜单，每个QMenu里面的小项目就是一个QAction，一个QAction由一个图标和一段文字描述组成。要先右键弹出菜单我们需要重写contextMenuEvent(QContextMenuEvent *event)事件，如果是按钮菜单等关联信号槽，在槽函数弹出菜单即可。 源码分析void Widget::createMenu() { m_menu1 = new QMenu(); m_menu1-&gt;addAction(&quot;1_1&quot;,this,SLOT(actionsSlot())); m_menu1-&gt;addAction(&quot;1_2&quot;,this,SLOT(actionsSlot())); m_menu1-&gt;addAction(&quot;1_3&quot;,this,SLOT(actionsSlot())); QMenu* menu2 = m_menu1-&gt;addMenu(&quot;2_0&quot;); menu2-&gt;addAction(&quot;2_1&quot;,this,SLOT(actionsSlot())); QMenu* menu3 = menu2-&gt;addMenu(&quot;3_0&quot;); menu2-&gt;addSeparator(); menu3-&gt;addAction(&quot;3_1&quot;,this,SLOT(actionsSlot())); menu3-&gt;addAction(&quot;3_2&quot;,this,SLOT(actionsSlot())); menu3-&gt;addAction(&quot;3_3&quot;,this,SLOT(actionsSlot())); menu2-&gt;addAction(&quot;2_2&quot;,this,SLOT(actionsSlot())); menu2-&gt;addAction(&quot;2_3&quot;,this,SLOT(actionsSlot())); m_menu1-&gt;addSeparator(); m_menu1-&gt;addAction(&quot;1_4&quot;,this,SLOT(actionsSlot())); } createMenu()函数中创建了三个菜单，通过addAction()函数添加小项目到每个菜单中,addAction()同时提供关联到对象槽函数的重载版本，这样就可以在添加的同时也关联好槽函数，addMenu()给菜单添加下级菜单，当鼠标滑到addMenu()添加的项目是会自动弹出下级菜单。addSeparator()在每个QAction之间添加分离器。通过addAction()和addMenu()的结合使用就可以构造看起来很强大的多级菜单，再通过实现它们的槽函数我们就可以实现每个QAction被点击时要响应的事件。 void Widget::actionsSlot() { QAction *action = (QAction*)sender(); QString actionText = action-&gt;text(); qDebug()&lt;&lt;actionText&lt;&lt;&quot;triggerred!&quot;&lt;&lt;endl; if(&quot;1_1&quot; == actionText) { //... } else if(&quot;1_2&quot; == actionText) { //... } //... } 该槽函数处理QAction点击的时候要处理的事情。通过sender()取得发送信号的对象，再取得QAction的属性就可以在代码逻辑中分别处理不同的QAction该处理的事情。 void Widget::contextMenuEvent(QContextMenuEvent *event) { m_menu1-&gt;exec(QCursor::pos()); event-&gt;accept(); } 重写contextMenuEvent()事件用于处理鼠标右键事件，但右击鼠标时，在鼠标点击的位置弹出菜单。 运行截图 版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。","categories":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"/tags/Qt/"}],"keywords":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}]},{"title":"设置 QLineEdit 无边框且透明","slug":"设置QLineEdit无边框且透明","date":"2019-08-31T03:27:11.000Z","updated":"2020-02-25T16:25:34.070Z","comments":true,"path":"2019/08/31/设置QLineEdit无边框且透明/","link":"","permalink":"/2019/08/31/设置QLineEdit无边框且透明/","excerpt":"","text":"ui-&gt;lineEdit-&gt;setStyleSheet(&quot;background:transparent;border-width:0;border-style:outset&quot;);","categories":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"/tags/Qt/"}],"keywords":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}]},{"title":"Qt5.12 之程序发布教程（Windows）","slug":"Qt5-12之程序发布教程（Windows）","date":"2019-08-30T13:50:43.000Z","updated":"2020-02-26T04:39:15.950Z","comments":true,"path":"2019/08/30/Qt5-12之程序发布教程（Windows）/","link":"","permalink":"/2019/08/30/Qt5-12之程序发布教程（Windows）/","excerpt":"","text":"在Windows平台下，用Qtcreator生成的SerialPort.exe,直接打开，可能出现以下等问题。 这是缺少相应的库文件，只要把库文件找到，并粘贴在SerialPort.exe目录下就可以了。 一、找到SerialPort.exe的路径，并复制该路径。 二、按下win+Q（win10）打开Windows搜索框，输入qt，就很容易找到qt 5.12.0 for desktop，然后打开。 三、进入需要打包软件的路径 四、输入windeployqt SerialPort.exe 这时，可以发现SerialPort.exe所在的目录多了很多库文件，直接点击SerialPort.exe，也可以打开了。如果把这整个文件夹压缩打包，在其他电脑解压后，也是可运行的。 五、使用免费打包软件Engima Virtual Box。 软件的安装非常简单，next、accepte、next、next搞定。 如果不喜欢英文可以选择中文，关闭重新打开软件就生效了。 封包的主程序：选择需要进行封包的SerialPort.exe,这个必须要有，其他可以不选择，为了避免其他电脑没有相应的库文件等，建议把所有依赖的文件都打包，即SerialPort.exe整个目录。 封包程序另存为：生成的程序的路径，已自动命名，可以自定义名字，不能和SerialPort.exe重名。 文件：依赖文件，记得把SerialPort.exe移除 点击文件选择，选择压缩文件，可以生成更小的程序包，但是以后每次打开软件都需要解压，即启动时间变慢。 完成上面的操作，就可以点击执行封包。 封包完成 在SerialPort.exe目录下，可以发现SerialPort_boxed.exe，把它复制到其他文件夹都可以直接运行。 版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。","categories":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}],"tags":[{"name":"Qt","slug":"Qt","permalink":"/tags/Qt/"}],"keywords":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}]},{"title":"将本地文件上传到 GitHub","slug":"将本地文件上传到github","date":"2019-08-30T08:09:47.000Z","updated":"2020-02-26T04:40:32.677Z","comments":true,"path":"2019/08/30/将本地文件上传到github/","link":"","permalink":"/2019/08/30/将本地文件上传到github/","excerpt":"","text":"前言GitHub开源代码库以及版本控制系统，可以托管各种git库，可以将个人Blog或小型项目托管到GitHub通过Git将本地文件上传到GitHub上边也可用于保存。 步骤1、下载Git 可自行前往官网下载 也可点此下载 2、登录GitHub，创建项目点此登录 3、在GitHub上创建一个仓库如果是第一次创建界面可能不太一样，摸索下怎么创建仓库 4、获取该仓库的地址复制该地址 5、打开你要上传的本地文件如果你安装完成了Git的话，右键会有Git Brash Here这个选项，选择此选项，git clone +url url为一开始复制的仓库地址将存储库克隆到新创建的目录中 6、将本地文件复制到新的目录下打开你要上传的文件，里面会出现一个新的文件夹，就是你在GitHub上面创建的仓库，将除了新文件夹的其他东西都拷贝到这个新出的文件夹里面 7、回到刚的Git命令行下1、进入新创建的文件夹，可以用 cd 文件夹名也可以选择该文件夹，在右键git brash here 2、输入git add . 注意不要忘记后面的点 等它自动添加完成 3、输入git commit -m &quot;Infomation&quot;提交到本地的版本控制库里，引号里面是你对本次提交的说明信息，可以随意书写。 4、最后输入git push -u origin master将你本地的仓库提交到你的GitHub，最后会让输入你的GitHub的账号和密码，输入回车之后再去看GitHub项目，就看到你本地项目出现在GitHub上了！ 然后就大功告成了！！！ 版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。","categories":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}],"tags":[{"name":"GitHub","slug":"GitHub","permalink":"/tags/GitHub/"}],"keywords":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}]},{"title":"Hexo+GitHub 搭建博客","slug":"hexo-github搭建博客","date":"2019-08-30T06:46:38.000Z","updated":"2020-02-26T04:38:59.833Z","comments":true,"path":"2019/08/30/hexo-github搭建博客/","link":"","permalink":"/2019/08/30/hexo-github搭建博客/","excerpt":"","text":"前言好的学习习惯就是随手记录学习历程，随手记录一下最近刚学习的用Hexo+GitHub搭建博客的过程。小白一个，可提建议，勿喷~ 步骤1.安装Nodejs在Node官网下载LTS版本，然后一路next进行安装，我安装到了C盘。 2.安装GitDownloadGit，一般可以一路next下去，最后可在cmd输入Git判断是否安装正常。 3.注册GitHub账号并配置SSH新手注册时一定要记好用户名、邮箱及密码，后面还会用，注册好后点击头像左边的+号创建仓库New repository，如图，注意命名要一致，这样仓库就建好了。 接下来打开刚才下载的git-bash.exe，输入ssh-keygen -t rsa -C &quot;yourgithub邮箱&quot;回车，再回车三次，成功生成ssh，在GitHub点击头像下的Settings–&gt;SSH and GPG keys–&gt;New SSH key，Title 随意写，可以写成自己的用户名，key 写刚才生成的ssh，默认在C:\\用户\\Administrator.ssh\\id_rsa.pub 里，将里面的内容复制粘贴过去，Add SSH key，这样就配置好了。 4.安装Hexo我是在D盘创建一个Hexo文件夹，cmd该文件夹，输入npm install hexo-cli -g 回车，然后hexo init 3hsaBlog(这个名字自行定义，自己的博客内容以后都在这里面)，再依次执行cd 3hsaBlog，npm install，hexo s(或hexo s -p 端口号(5000))，就可以浏览器访问自己的博客了，Ctrl+C停止本地服务器。 5.Hexo部署到GitHub上打开3hsaBlog文件夹里的_config.yml文件，修改里面如图所示内容。 其他内容可自行修改（如title、keywords、author等），注意：_config.yml文件里冒号后面都有一个空格。每次修改后记得保存！接下来在3hsaBlog文件下cmd依次执行以下代码： npm install hexo-deployer-git --save hexo g hexo d / /接下来会提示分别输入以下代码 git config --global uesr.email &quot;your邮箱&quot; git config --global uesr.name &quot;github用户名&quot; 执行成功会跳出GitHub的login框，那就登陆吧，如果不对，可能会再次在命令行提示输入，登陆成功即表示部署成功，现在就可以在浏览器输入username.github.io访问自己的博客了。 续搭建好的博客默认主题为landscape，一般不会有人喜欢，可在Themes里选择自己喜欢的主题下载或克隆进行修改完善。发布文章的步骤：可在CDSN用Markdown编辑器编写，导出为Markdown文件，将生成的.md文件放在自己博客文件夹下的source–&gt;_post文件夹里，然后在自己博客文件右击进入Git bash，执行hexo g、hexo d，就上传好了，可以hexo s先在本地浏览一下，再用网址访问，自我感觉这样更新快一点。用来编写.md文件的编辑器还有很多，可在度娘求知。 版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。","categories":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}],"tags":[{"name":"博客","slug":"博客","permalink":"/tags/博客/"}],"keywords":[{"name":"转载","slug":"转载","permalink":"/categories/转载/"}]}]}